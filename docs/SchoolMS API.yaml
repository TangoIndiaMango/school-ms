openapi: 3.0.3
info:
  title: SchoolMS API
  version: 1.0.0
  description: SchoolMS API description
paths:
  /api/course/courses:
    get:
      operationId: api_course_courses_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCreateCourseList'
          description: ''
    post:
      operationId: api_course_courses_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateCourse'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCourse'
          description: ''
  /api/course/courses/{id}:
    get:
      operationId: api_course_courses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCourse'
          description: ''
    put:
      operationId: api_course_courses_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateCourse'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCourse'
          description: ''
    patch:
      operationId: api_course_courses_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCreateCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCreateCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCreateCourse'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCourse'
          description: ''
    delete:
      operationId: api_course_courses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/departments:
    get:
      operationId: api_departments_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDepartmentList'
          description: ''
    post:
      operationId: api_departments_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Department'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Department'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
  /api/departments/{id}:
    get:
      operationId: api_departments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this department.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
    put:
      operationId: api_departments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this department.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Department'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Department'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
    patch:
      operationId: api_departments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this department.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDepartment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDepartment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDepartment'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
    delete:
      operationId: api_departments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this department.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/faculties:
    get:
      operationId: api_faculties_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFacultyList'
          description: ''
    post:
      operationId: api_faculties_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Faculty'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Faculty'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Faculty'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Faculty'
          description: ''
  /api/faculties/{id}:
    get:
      operationId: api_faculties_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this faculty.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Faculty'
          description: ''
    put:
      operationId: api_faculties_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this faculty.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Faculty'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Faculty'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Faculty'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Faculty'
          description: ''
    patch:
      operationId: api_faculties_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this faculty.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFaculty'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFaculty'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFaculty'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Faculty'
          description: ''
    delete:
      operationId: api_faculties_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this faculty.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/levels:
    get:
      operationId: api_levels_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLevelList'
          description: ''
    post:
      operationId: api_levels_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Level'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Level'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Level'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Level'
          description: ''
  /api/levels/{id}:
    get:
      operationId: api_levels_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this level.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Level'
          description: ''
    put:
      operationId: api_levels_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this level.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Level'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Level'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Level'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Level'
          description: ''
    patch:
      operationId: api_levels_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this level.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLevel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLevel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLevel'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Level'
          description: ''
    delete:
      operationId: api_levels_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this level.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/semesters/:
    get:
      operationId: api_semesters_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSemesterList'
          description: ''
    post:
      operationId: api_semesters_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Semester'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Semester'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Semester'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Semester'
          description: ''
  /api/semesters/{id}/:
    get:
      operationId: api_semesters_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this semester.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Semester'
          description: ''
    put:
      operationId: api_semesters_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this semester.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Semester'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Semester'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Semester'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Semester'
          description: ''
    patch:
      operationId: api_semesters_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this semester.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSemester'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSemester'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSemester'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Semester'
          description: ''
    delete:
      operationId: api_semesters_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this semester.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/sessions/:
    get:
      operationId: api_sessions_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSessionList'
          description: ''
    post:
      operationId: api_sessions_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Session'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Session'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Session'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: ''
  /api/sessions/{id}/:
    get:
      operationId: api_sessions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this session.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: ''
    put:
      operationId: api_sessions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this session.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Session'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Session'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Session'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: ''
    patch:
      operationId: api_sessions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this session.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSession'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSession'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSession'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: ''
    delete:
      operationId: api_sessions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this session.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/users/create/:
    post:
      operationId: api_users_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUser'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
  /api/users/lecturer/:
    get:
      operationId: api_users_lecturer_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lecturer'
          description: ''
    post:
      operationId: api_users_lecturer_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lecturer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Lecturer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Lecturer'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lecturer'
          description: ''
    delete:
      operationId: api_users_lecturer_destroy
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/users/lecturer/{id}/:
    get:
      operationId: api_users_lecturer_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lecturer'
          description: ''
    post:
      operationId: api_users_lecturer_create_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lecturer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Lecturer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Lecturer'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lecturer'
          description: ''
    delete:
      operationId: api_users_lecturer_destroy_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/users/login/:
    post:
      operationId: api_users_login_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Auth'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Auth'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth'
          description: ''
  /api/users/student/:
    get:
      operationId: api_users_student_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
    post:
      operationId: api_users_student_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
    delete:
      operationId: api_users_student_destroy
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/users/student/{id}/:
    get:
      operationId: api_users_student_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
    post:
      operationId: api_users_student_create_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
    delete:
      operationId: api_users_student_destroy_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/users/user/:
    get:
      operationId: api_users_user_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
components:
  schemas:
    Auth:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - email
      - password
    CreateCourse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course_code:
          type: string
          maxLength: 20
        course_name:
          type: string
          maxLength: 100
        course_description:
          type: string
        course_credit:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        course_unit:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        course_status:
          type: boolean
        mark:
          type: string
          nullable: true
          maxLength: 20
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        course_level:
          type: integer
          nullable: true
        course_semester:
          type: integer
        department_course:
          type: integer
      required:
      - course_code
      - course_credit
      - course_description
      - course_name
      - course_semester
      - course_unit
      - created_at
      - department_course
      - id
      - updated_at
    CustomUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        first_name:
          type: string
          nullable: true
          maxLength: 100
        last_name:
          type: string
          nullable: true
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 255
        is_active:
          type: boolean
        is_staff:
          type: boolean
        is_superuser:
          type: boolean
        is_verified:
          type: boolean
        phone:
          type: string
          nullable: true
          maxLength: 60
        residential_address:
          type: string
          nullable: true
          maxLength: 150
        home_address:
          type: string
          nullable: true
          maxLength: 150
        date_of_birth:
          type: string
          format: date
          nullable: true
        gender:
          $ref: '#/components/schemas/GenderEnum'
        role:
          $ref: '#/components/schemas/RoleEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
      required:
      - created_at
      - email
      - gender
      - id
      - password
      - role
      - updated_at
    Department:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        short_name:
          type: string
          maxLength: 20
        program_duration:
          type: string
          nullable: true
          maxLength: 50
        qualification:
          type: string
          nullable: true
          maxLength: 50
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        department_head:
          type: integer
          nullable: true
        faculty:
          type: integer
        level:
          type: integer
          nullable: true
      required:
      - created_at
      - faculty
      - id
      - name
      - short_name
      - updated_at
    Faculty:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        short_name:
          type: string
          maxLength: 20
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        dean:
          type: integer
          nullable: true
      required:
      - created_at
      - id
      - name
      - short_name
      - updated_at
    GenderEnum:
      enum:
      - male
      - female
      type: string
      description: |-
        * `male` - Male
        * `female` - Female
    Lecturer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        staff_id:
          type: string
          maxLength: 50
        designation:
          type: string
          nullable: true
          maxLength: 30
        user:
          type: integer
        courses:
          type: array
          items:
            type: integer
      required:
      - courses
      - id
      - staff_id
      - user
    Level:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        level:
          type: string
          maxLength: 20
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        staff_advisor_level:
          type: integer
          nullable: true
      required:
      - created_at
      - id
      - level
      - updated_at
    Nested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course_code:
          type: string
          maxLength: 20
        course_name:
          type: string
          maxLength: 100
        course_description:
          type: string
        course_credit:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        course_unit:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        course_status:
          type: boolean
        mark:
          type: string
          nullable: true
          maxLength: 20
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        course_level:
          type: integer
          nullable: true
        course_semester:
          type: integer
        department_course:
          type: integer
      required:
      - course_code
      - course_credit
      - course_description
      - course_name
      - course_semester
      - course_unit
      - created_at
      - department_course
      - id
      - updated_at
    PaginatedCreateCourseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CreateCourse'
    PaginatedDepartmentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Department'
    PaginatedFacultyList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Faculty'
    PaginatedLevelList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Level'
    PaginatedSemesterList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Semester'
    PaginatedSessionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Session'
    PatchedCreateCourse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course_code:
          type: string
          maxLength: 20
        course_name:
          type: string
          maxLength: 100
        course_description:
          type: string
        course_credit:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        course_unit:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        course_status:
          type: boolean
        mark:
          type: string
          nullable: true
          maxLength: 20
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        course_level:
          type: integer
          nullable: true
        course_semester:
          type: integer
        department_course:
          type: integer
    PatchedDepartment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        short_name:
          type: string
          maxLength: 20
        program_duration:
          type: string
          nullable: true
          maxLength: 50
        qualification:
          type: string
          nullable: true
          maxLength: 50
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        department_head:
          type: integer
          nullable: true
        faculty:
          type: integer
        level:
          type: integer
          nullable: true
    PatchedFaculty:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        short_name:
          type: string
          maxLength: 20
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        dean:
          type: integer
          nullable: true
    PatchedLevel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        level:
          type: string
          maxLength: 20
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        staff_advisor_level:
          type: integer
          nullable: true
    PatchedSemester:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        session:
          type: integer
    PatchedSession:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        start_date:
          type: string
          format: date
        is_active:
          type: boolean
        end_date:
          type: string
          format: date
        is_deleted:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    RoleEnum:
      enum:
      - student
      - lecturer
      - dep_head
      - dean
      - admin
      type: string
      description: |-
        * `student` - Student
        * `lecturer` - Lecturer
        * `dep_head` - Department Head
        * `dean` - Dean
        * `admin` - Admin
    Semester:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        session:
          type: integer
      required:
      - created_at
      - end_date
      - id
      - name
      - session
      - start_date
      - updated_at
    Session:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        start_date:
          type: string
          format: date
        is_active:
          type: boolean
        end_date:
          type: string
          format: date
        is_deleted:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - end_date
      - id
      - name
      - start_date
      - updated_at
    Student:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
        department:
          type: string
        matric_no:
          type: string
          maxLength: 50
        courses:
          type: array
          items:
            $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - courses
      - department
      - id
      - matric_no
      - user
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
